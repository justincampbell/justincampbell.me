= javascript_include_tag 'https://raw.github.com/rmm5t/jquery-timeago/master/jquery.timeago.js'
ul#burritos
  - (1..12).to_a.reverse.each do |n|
    li data-weeks-ago=n &nbsp;
#last-burrito
  div.name &nbsp;
  abbr.timeago &nbsp;
ul#top-burritos
sass:
  #burritos
    li
      background: red
      display: inline-block
      float: left
      margin: 10px
      height: 1px
      min-height: 1px
      width: 50px
javascript:
  rawBurritos = #{raw @burritos.to_json}
coffee:
  DAY_LENGTH = 1000 * 60 * 60 * 24
  WEEK_LENGTH = DAY_LENGTH * 7
  YEAR_LENGTH = WEEK_LENGTH * 52

  MAXIMUM_HEIGHT = 100

  class Burrito
    constructor: (attributes) ->
      @date = new Date attributes.date * 1000
      @venue = attributes.venue

    @all: new Burrito burrito for burrito in rawBurritos

    @allForWeeksAgo: (weeksAgo) ->
      @all.filter (burrito) ->
        (new Date(new Date() - WEEK_LENGTH * weeksAgo)) <
        burrito.date <
        (new Date(new Date() - WEEK_LENGTH * (weeksAgo - 1)))

    @last: ->
      @all[0]

    date: @date
    timeAgoInWords: -> @date.stringify
    venue: @venue

  class Venue
    constructor: (name, count) ->
      @name = name
      @count = count

    @top: (size = 5) ->
      result = {}
      tuples = []
      for burrito in Burrito.all
        result[burrito.venue] ||= 0
        result[burrito.venue] += 1
      tuples.push [venue, count] for venue, count of result
      tuples = tuples.sort (a, b) ->
        if a[1] < b[1] then 1 else (if a[1] > b[1] then -1 else 0)
      console.dir tuples
      new Venue tuple[0], tuple[1] for tuple in tuples.slice 0, size

    name: @name
    count: @count

  class Week
    constructor: (weeksAgo) ->
      @burritos = Burrito.allForWeeksAgo weeksAgo
      @weeksAgo = weeksAgo

    burritos: @burritos
    weeksAgo: @weeksAgo

  $ ->
    # Create the weeks with burritos
    weeks = (new Week weeksAgo for weeksAgo in [1..12])

    # Find the maximum burritos per week
    maximum = 0
    for week in weeks
      count = week.burritos.length
      maximum = count if count > maximum

    # Set the last burrito
    $('#last-burrito > .name').html Burrito.last().venue
    $('#last-burrito > .timeago').attr 'title', Burrito.last().date.toISOString()

    # Set the top burritos
    for venue in Venue.top 5
      name = venue.name
      count = venue.count
      pluralization = if count > 1 then 's' else ''
      $('#top-burritos').append $('<li>').html("#{name} (#{count} time#{pluralization})")

    # Set the height of the weeks
    for week in weeks
      ago = week.weeksAgo
      count = week.burritos.length
      size = (count / maximum) * MAXIMUM_HEIGHT

      element = $("#burritos > li[data-weeks-ago=#{ago}]")
      element.height size
      element.attr 'data-burrito-count', count

    # Time ago in words
    $('abbr.timeago').timeago()
